version: '3.8'

services:
  web_1:
    build:
      context: .
    container_name: web_1
    volumes:
      - .:/tradehive
    expose:
      - "8000"
    env_file:
      - .env
    networks:
      - tradehive

  web_2:
    build:
      context: .
    container_name: web_2
    volumes:
      - .:/tradehive
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - web_1
    networks:
      - tradehive

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./cert.crt:/etc/nginx/cert.crt
      - ./cert.key:/etc/nginx/cert.key
    depends_on:
      - web_2
    networks:
      - tradehive

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    depends_on:
      - nginx
    networks:
      - tradehive

  redis:
    image: redis:7
    container_name: redis
    expose:
      - "6379"
    depends_on:
      - db
    networks:
      - tradehive

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery
    command: ["worker"]
    volumes:
      - .:/tradehive
    depends_on:
      - redis
    env_file:
      - .env
    networks:
      - tradehive

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_beat
    command: ["beat"]
    volumes:
      - .:/tradehive
    depends_on:
      - celery
    env_file:
      - .env
    networks:
      - tradehive

volumes:
  postgres_data:

networks:
  tradehive:
    driver: bridge
