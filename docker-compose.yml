version: '3.8'

services:
  web:
    build:
      context: .
      target: web
      dockerfile: ./Dockerfile
    image: tradehive/web:latest
    container_name: web
    # expose는 호스트와 연결하지 않고 컨테이너 내부에서만 사용할 수 있도록 포트를 노출
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - db
    # networks는 컨테이너가 속한 네트워크를 지정
    networks:
      - outer
      - inner
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/nginx/nginx.crt:/etc/nginx/nginx.crt
      - ./ssl/nginx/nginx.key:/etc/nginx/nginx.key
    depends_on:
      - web
    networks:
      - outer
    restart: always

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      # postgresql의 데이터가 들어있는 volume은 초기화 시 항상 비어있어야 하므로
      - postgres_data:/var/lib/postgresql/data
      # 아래와 같이 설정 파일을 연결하는 경우 경로를 데이터가 들어있는 volume과 분리해야 함
      - ./conf/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./conf/postgresql/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./ssl/db/db.crt:/etc/ssl/certs/db.crt
      - ./ssl/db/db.key:/etc/ssl/private/db.key
    # 그리고 실행 시 설정 파일을 명시적으로 지정해주어야 함
    command: |
      postgres -c config_file=/etc/postgresql/postgresql.conf
    expose:
      - "5432"
    networks:
      - inner
    restart: always

  redis:
    image: redis:7
    container_name: redis
    expose:
      - "6379"
    networks:
      - inner
    restart: always

  # celery worker는 주기적인 작업을 처리하는 프로세스
  celery:
    build:
      context: .
      target: web
      dockerfile: ./Dockerfile
    image: tradehive/web:latest
    container_name: celery
    command: ["worker"]
    env_file:
      - .env
    depends_on:
      - web
    networks:
      - inner
    restart: always

  # celery beat는 주기적인 작업을 스케줄링하는 프로세스
  celery_beat:
    build:
      context: .
      target: web
      dockerfile: ./Dockerfile
    image: tradehive/web:latest
    container_name: celery_beat
    command: ["beat"]
    env_file:
      - .env
    depends_on:
      - celery
    networks:
      - inner
    restart: always

volumes:
  postgres_data:

networks:
  outer:
    driver: bridge
    ipam:
      config:
        - subnet: 172.29.0.0/16
  inner:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
