version: '3.8'

services:
  web:
    build:
      context: .
      target: web
      dockerfile: ./docker/Dockerfile
    image: tradehive/web:latest
    container_name: web
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - outer
      - inner
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/nginx/nginx.crt:/etc/nginx/nginx.crt
      - ./ssl/nginx/nginx.key:/etc/nginx/nginx.key
    depends_on:
      - web
    networks:
      - outer
    restart: always

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./conf/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./conf/postgresql/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./ssl/db/db.crt:/etc/ssl/certs/db.crt
      - ./ssl/db/db.key:/etc/ssl/private/db.key
    command: |
      postgres -c config_file=/etc/postgresql/postgresql.conf
    expose:
      - "5432"
    networks:
      - inner
    restart: always

  redis:
    image: redis:7
    container_name: redis
    expose:
      - "6379"
    networks:
      - inner
    restart: always

  celery:
    build:
      context: .
      target: web
      dockerfile: ./docker/Dockerfile
    image: tradehive/web:latest
    container_name: celery
    command: ["worker"]
    env_file:
      - .env
    depends_on:
      - web
    networks:
      - inner
    restart: always

  celery_beat:
    build:
      context: .
      target: web
      dockerfile: ./docker/Dockerfile
    image: tradehive/web:latest
    container_name: celery_beat
    command: ["beat"]
    env_file:
      - .env
    depends_on:
      - celery
    networks:
      - inner
    restart: always

  firewall:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.firewall
    image: tradehive/firewall:latest
    container_name: firewall
    depends_on:
      - web
    network_mode: "host"
    privileged: true

volumes:
  postgres_data:

networks:
  outer:
    driver: bridge
    ipam:
      config:
        - subnet: 172.29.0.0/16
  inner:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
